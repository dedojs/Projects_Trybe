{"ast":null,"code":"var _jsxFileName = \"/home/andre/trybe_projects/sd-019-c-project-trybewallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport FormExpenses from '../components/FormExpenses';\nimport { actionFetchCurrencies } from '../actions'; // import FormResults from '../components/FormResults';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.getCurrencyFromApi();\n    };\n\n    this.getCurrencyFromApi = async () => {\n      this.setState({\n        isLoading: true\n      });\n      const {\n        currenciesGlobal\n      } = this.props;\n      await currenciesGlobal();\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.changeValue = value => Number(value.toFixed(2));\n\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    const {\n      walletExpenses\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }), isLoading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 23\n      }\n    }, \"Loading\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormExpenses, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Despesas\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"formResult\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, \"Tag\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, \"M\\xE9todo de pagamento\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, \"Valor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, \"Moeda\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, \"C\\xE2mbio utilizado\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \"Valor convertido\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, \"Moeda de convers\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, \"Editar/Excluir\"))), walletExpenses.map((item, index) => /*#__PURE__*/React.createElement(\"tbody\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, item.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, item.tag), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }, item.method), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, (item.value * 1.00).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, item.exchangeRates[`${item.currency}`].name.split('/Real Brasileiro')), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }, (item.exchangeRates[`${item.currency}`].ask * 1.00).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, (item.value * item.exchangeRates[`${item.currency}`].ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, \"Real\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"formBtnContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"Del\")))))));\n  }\n\n}\n\nWallet.propTypes = {\n  currenciesGlobal: PropTypes.func\n}.isRequired;\n\nconst mapDispatchToProps = dispatch => ({\n  currenciesGlobal: () => dispatch(actionFetchCurrencies())\n});\n\nconst mapStateToProps = state => ({\n  wallet: state.wallet,\n  walletExpenses: state.wallet.expenses\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);","map":{"version":3,"sources":["/home/andre/trybe_projects/sd-019-c-project-trybewallet/src/pages/Wallet.js"],"names":["React","PropTypes","connect","Header","FormExpenses","actionFetchCurrencies","Wallet","Component","constructor","props","componentDidMount","getCurrencyFromApi","setState","isLoading","currenciesGlobal","changeValue","value","Number","toFixed","state","render","walletExpenses","map","item","index","description","tag","method","exchangeRates","currency","name","split","ask","propTypes","func","isRequired","mapDispatchToProps","dispatch","mapStateToProps","wallet","expenses"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport FormExpenses from '../components/FormExpenses';\nimport { actionFetchCurrencies } from '../actions';\n// import FormResults from '../components/FormResults';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    this.getCurrencyFromApi();\n  }\n\n  getCurrencyFromApi = async () => {\n    this.setState({ isLoading: true });\n    const { currenciesGlobal } = this.props;\n    await currenciesGlobal();\n    this.setState({ isLoading: false });\n  }\n\n  changeValue = (value) => Number(value.toFixed(2));\n\n  render() {\n    const { isLoading } = this.state;\n    const { walletExpenses } = this.props;\n    return (\n      <div>\n        <Header />\n        { isLoading ? <p>Loading</p>\n          : (\n            <div>\n              <FormExpenses />\n            </div>\n          )}\n        <hr />\n        <h3>Despesas</h3>\n        <table className=\"formResult\">\n          <thead>\n            <tr>\n              <th>Descrição</th>\n              <th>Tag</th>\n              <th>Método de pagamento</th>\n              <th>Valor</th>\n              <th>Moeda</th>\n              <th>Câmbio utilizado</th>\n              <th>Valor convertido</th>\n              <th>Moeda de conversão</th>\n              <th>Editar/Excluir</th>\n            </tr>\n          </thead>\n          {\n            walletExpenses.map((item, index) => (\n              <tbody key={ index }>\n                <tr>\n                  <td>{ item.description }</td>\n                  <td>{ item.tag }</td>\n                  <td>{ item.method }</td>\n                  <td>{ (item.value * 1.00).toFixed(2) }</td>\n                  <td>\n                    {\n                      item.exchangeRates[`${item.currency}`]\n                        .name.split('/Real Brasileiro')\n                    }\n                  </td>\n                  <td>\n                    {\n                    (item.exchangeRates[`${item.currency}`].ask * 1.00).toFixed(2)\n                    }\n                  </td>\n                  <td>\n                    {\n                      (item.value * item.exchangeRates[`${item.currency}`]\n                        .ask).toFixed(2)\n                    }\n                  </td>\n                  <td>Real</td>\n                  <td className=\"formBtnContainer\">\n                    <button type=\"button\">Edit</button>\n                    <button type=\"button\">Del</button>\n                  </td>\n                </tr>\n              </tbody>\n            ))\n          }\n        </table>\n      </div>\n    );\n  }\n}\n\nWallet.propTypes = {\n  currenciesGlobal: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  currenciesGlobal: () => dispatch(actionFetchCurrencies()),\n});\n\nconst mapStateToProps = (state) => ({\n  wallet: state.wallet,\n  walletExpenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n"]},"metadata":{},"sourceType":"module"}