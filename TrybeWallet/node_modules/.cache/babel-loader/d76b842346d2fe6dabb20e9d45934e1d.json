{"ast":null,"code":"var _jsxFileName = \"/home/andre/trybe_projects/sd-019-c-project-trybewallet/src/components/FormExpenses.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; // import { Link } from 'react-router-dom';\n\nclass FormExpenses extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleForm = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      valor: '',\n      moeda: '',\n      metodo: '',\n      despesa: '',\n      descricao: ''\n    };\n  }\n\n  render() {\n    const {\n      currencies\n    } = this.props;\n    const {\n      moeda,\n      descricao,\n      valor,\n      metodo,\n      despesa\n    } = this.state;\n    const arrayTipos = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"formExpensesContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"valor\",\n      \"data-testid\": \"value-input\",\n      onChange: this.handleForm,\n      value: valor,\n      placeholder: \"Valor da despesa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"descricao\",\n      \"data-testid\": \"description-input\",\n      onChange: this.handleForm,\n      value: descricao,\n      placeholder: \"Descri\\xE7\\xE3o da despesa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      type: \"text\",\n      name: \"metodo\",\n      \"data-testid\": \"method-input\",\n      onChange: this.handleForm,\n      value: metodo,\n      placeholder: \"M\\xE9todo de Pagamento\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de cr\\xE9dito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de d\\xE9bito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\")), /*#__PURE__*/React.createElement(\"select\", {\n      type: \"text\",\n      name: \"despesa\",\n      onChange: this.handleForm,\n      value: despesa,\n      placeholder: \"Tipo de Despesa\",\n      \"data-testid\": \"tag-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, arrayTipos.map((tipo, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: tipo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, tipo))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Moeda\"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"moeda\",\n      value: moeda,\n      onChange: this.handleForm,\n      label: \"Moeda\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, currencies.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, item))));\n  }\n\n}\n\nFormExpenses.propTypes = {\n  currencies: PropTypes.string\n}.isRequired;\n\nconst mapStateToProps = state => ({\n  currencies: state.wallet.currencies\n});\n\nexport default connect(mapStateToProps, null)(FormExpenses);","map":{"version":3,"sources":["/home/andre/trybe_projects/sd-019-c-project-trybewallet/src/components/FormExpenses.js"],"names":["React","PropTypes","connect","FormExpenses","Component","constructor","props","handleForm","target","name","value","setState","state","valor","moeda","metodo","despesa","descricao","render","currencies","arrayTipos","map","tipo","index","item","propTypes","string","isRequired","mapStateToProps","wallet"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import { Link } from 'react-router-dom';\n\nclass FormExpenses extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valor: '',\n      moeda: '',\n      metodo: '',\n      despesa: '',\n      descricao: '',\n    };\n  }\n\n  handleForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { currencies } = this.props;\n    const { moeda, descricao, valor, metodo, despesa } = this.state;\n    const arrayTipos = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    return (\n      <form className=\"formExpensesContainer\">\n        <input\n          type=\"number\"\n          name=\"valor\"\n          data-testid=\"value-input\"\n          onChange={ this.handleForm }\n          value={ valor }\n          placeholder=\"Valor da despesa\"\n        />\n        <input\n          type=\"text\"\n          name=\"descricao\"\n          data-testid=\"description-input\"\n          onChange={ this.handleForm }\n          value={ descricao }\n          placeholder=\"Descrição da despesa\"\n        />\n        <select\n          type=\"text\"\n          name=\"metodo\"\n          data-testid=\"method-input\"\n          onChange={ this.handleForm }\n          value={ metodo }\n          placeholder=\"Método de Pagamento\"\n        >\n          <option value=\"Dinheiro\">Dinheiro</option>\n          <option value=\"Cartão de crédito\">Cartão de crédito</option>\n          <option value=\"Cartão de débito\">Cartão de débito</option>\n        </select>\n        <select\n          type=\"text\"\n          name=\"despesa\"\n          onChange={ this.handleForm }\n          value={ despesa }\n          placeholder=\"Tipo de Despesa\"\n          data-testid=\"tag-input\"\n        >\n          {\n            arrayTipos.map((tipo, index) => (\n              <option key={ index } value={ tipo }>{tipo}</option>\n            ))\n          }\n        </select>\n        <label htmlFor=\"\" >Moeda</label>\n        <select\n          name=\"moeda\"\n          value={ moeda }\n          onChange={ this.handleForm }\n          label=\"Moeda\"\n        >\n          {\n            currencies.map((item, index) => (\n              <option key={ index } value={ item }>{item}</option>\n            ))\n          }\n        </select>\n      </form>\n    );\n  }\n}\n\nFormExpenses.propTypes = {\n  currencies: PropTypes.string,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n});\n\nexport default connect(mapStateToProps, null)(FormExpenses);\n"]},"metadata":{},"sourceType":"module"}