{"ast":null,"code":"var _jsxFileName = \"/home/andre/trybe_projects/sd-019-c-project-trybewallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header'; // import { Link } from 'react-router-dom';\n\nimport fetchCurrency from '../services/Api';\nimport { actionWallet } from '../actions';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.getCurrencyFromApi();\n    };\n\n    this.getCurrencyFromApi = async () => {\n      this.setState({\n        isLoading: true\n      });\n      const {\n        currenciesGlobal\n      } = this.props;\n      const {\n        currenciesLocal\n      } = this.state;\n      const moedas = await fetchCurrency();\n      this.setState({\n        currenciesLocal: moedas\n      });\n      await currenciesGlobal(currenciesLocal);\n      this.setState({\n        isLoading: false\n      });\n      console.lo;\n    };\n\n    this.state = {\n      isLoading: false,\n      currenciesLocal: []\n    };\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), isLoading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 23\n      }\n    }, \"Loading\") : /*#__PURE__*/React.createElement(\"button\", {\n      // onClick={ }\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"click\"));\n  }\n\n}\n\nWallet.propTypes = {\n  currenciesGlobal: PropTypes.func\n}.isRequired;\n\nconst mapDispatchToProps = dispatch => ({\n  currenciesGlobal: state => dispatch(actionWallet(state))\n});\n\nconst mapStateToProps = state => ({\n  wallet: state.wallet\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);","map":{"version":3,"sources":["/home/andre/trybe_projects/sd-019-c-project-trybewallet/src/pages/Wallet.js"],"names":["React","PropTypes","connect","Header","fetchCurrency","actionWallet","Wallet","Component","constructor","props","componentDidMount","getCurrencyFromApi","setState","isLoading","currenciesGlobal","currenciesLocal","state","moedas","console","lo","render","propTypes","func","isRequired","mapDispatchToProps","dispatch","mapStateToProps","wallet"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,iBARmB,GAQC,YAAY;AAC9B,WAAKC,kBAAL;AACD,KAVkB;;AAAA,SAYnBA,kBAZmB,GAYE,YAAY;AAC/B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAuB,KAAKL,KAAlC;AACA,YAAM;AAAEM,QAAAA;AAAF,UAAsB,KAAKC,KAAjC;AACA,YAAMC,MAAM,GAAG,MAAMb,aAAa,EAAlC;AACA,WAAKQ,QAAL,CAAc;AAAEG,QAAAA,eAAe,EAAEE;AAAnB,OAAd;AACA,YAAMH,gBAAgB,CAACC,eAAD,CAAtB;AACA,WAAKH,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACAK,MAAAA,OAAO,CAACC,EAAR;AACD,KArBkB;;AAEjB,SAAKH,KAAL,GAAa;AACXH,MAAAA,SAAS,EAAE,KADA;AAEXE,MAAAA,eAAe,EAAE;AAFN,KAAb;AAID;;AAiBDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAgB,KAAKG,KAA3B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEIH,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAH,gBAEP;AACA;AACE,MAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJN,CADF;AAcD;;AAxCkC;;AA2CrCP,MAAM,CAACe,SAAP,GAAmB;AACjBP,EAAAA,gBAAgB,EAAEb,SAAS,CAACqB;AADX,EAEjBC,UAFF;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCX,EAAAA,gBAAgB,EAAGE,KAAD,IAAWS,QAAQ,CAACpB,YAAY,CAACW,KAAD,CAAb;AADG,CAAf,CAA3B;;AAIA,MAAMU,eAAe,GAAIV,KAAD,KAAY;AAClCW,EAAAA,MAAM,EAAEX,KAAK,CAACW;AADoB,CAAZ,CAAxB;;AAIA,eAAezB,OAAO,CAACwB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6ClB,MAA7C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\n// import { Link } from 'react-router-dom';\nimport fetchCurrency from '../services/Api';\nimport { actionWallet } from '../actions';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      currenciesLocal: [],\n    };\n  }\n\n  componentDidMount = async () => {\n    this.getCurrencyFromApi();\n  }\n\n  getCurrencyFromApi = async () => {\n    this.setState({ isLoading: true });\n    const { currenciesGlobal } = this.props;\n    const { currenciesLocal } = this.state;\n    const moedas = await fetchCurrency();\n    this.setState({ currenciesLocal: moedas });\n    await currenciesGlobal(currenciesLocal);\n    this.setState({ isLoading: false });\n    console.lo\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <div>\n        <Header />\n        { isLoading ? <p>Loading</p>\n          : (\n            <button\n            // onClick={ }\n              type=\"button\"\n            >\n              click\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nWallet.propTypes = {\n  currenciesGlobal: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  currenciesGlobal: (state) => dispatch(actionWallet(state)),\n});\n\nconst mapStateToProps = (state) => ({\n  wallet: state.wallet,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n"]},"metadata":{},"sourceType":"module"}