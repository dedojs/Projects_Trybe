{"ast":null,"code":"var _jsxFileName = \"/home/andre/trybe_projects/sd-019-c-project-trybewallet/src/components/FormExpenses.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actionExpense } from '../actions'; // import { Link } from 'react-router-dom';\n\nclass FormExpenses extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleForm = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.saveInfo = () => {\n      const {\n        walletExpenses\n      } = this.props;\n      walletExpenses(this.state);\n    };\n\n    this.state = {\n      valor: '',\n      moeda: '',\n      metodo: '',\n      despesa: '',\n      descricao: '',\n      data: '',\n      id: ''\n    };\n  }\n\n  render() {\n    const {\n      currencies\n    } = this.props;\n    const {\n      moeda,\n      descricao,\n      valor,\n      metodo,\n      despesa,\n      data\n    } = this.state;\n    const arrayTipos = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"formExpensesContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      name: \"data\",\n      onChange: this.handleForm,\n      value: data,\n      placeholder: \"Data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"valor\",\n      \"data-testid\": \"value-input\",\n      onChange: this.handleForm,\n      value: valor,\n      placeholder: \"Valor da despesa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"descricao\",\n      \"data-testid\": \"description-input\",\n      onChange: this.handleForm,\n      value: descricao,\n      placeholder: \"Descri\\xE7\\xE3o da despesa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      type: \"text\",\n      name: \"metodo\",\n      \"data-testid\": \"method-input\",\n      onChange: this.handleForm,\n      value: metodo,\n      placeholder: \"M\\xE9todo de Pagamento\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de cr\\xE9dito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de d\\xE9bito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\")), /*#__PURE__*/React.createElement(\"select\", {\n      type: \"text\",\n      name: \"despesa\",\n      onChange: this.handleForm,\n      value: despesa,\n      placeholder: \"Tipo de Despesa\",\n      \"data-testid\": \"tag-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, arrayTipos.map((tipo, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: tipo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, tipo))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"coin-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"coin-select\",\n      name: \"moeda\",\n      value: moeda,\n      onChange: this.handleForm,\n      label: \"Moeda\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, currencies.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, item)))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.saveInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, \"Adicionar despesa\"));\n  }\n\n}\n\nFormExpenses.propTypes = {\n  currencies: PropTypes.string\n}.isRequired;\n\nconst mapStateToProps = state => ({\n  currencies: state.wallet.currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  walletExpenses: state => dispatch(actionExpense(state))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormExpenses);","map":{"version":3,"sources":["/home/andre/trybe_projects/sd-019-c-project-trybewallet/src/components/FormExpenses.js"],"names":["React","PropTypes","connect","actionExpense","FormExpenses","Component","constructor","props","handleForm","target","name","value","setState","saveInfo","walletExpenses","state","valor","moeda","metodo","despesa","descricao","data","id","render","currencies","arrayTipos","map","tipo","index","item","propTypes","string","isRequired","mapStateToProps","wallet","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actionExpense } from '../actions';\n// import { Link } from 'react-router-dom';\n\nclass FormExpenses extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valor: '',\n      moeda: '',\n      metodo: '',\n      despesa: '',\n      descricao: '',\n      data: '',\n      id: ''\n    };\n  }\n\n  handleForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  saveInfo = () => {\n    const { walletExpenses } = this.props;\n    walletExpenses(this.state);\n  }\n\n  render() {\n    const { currencies } = this.props;\n    const { moeda, descricao, valor, metodo, despesa, data } = this.state;\n    const arrayTipos = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    return (\n      <form className=\"formExpensesContainer\">\n        <input\n          type=\"date\"\n          name=\"data\"\n          onChange={ this.handleForm }\n          value={ data }\n          placeholder=\"Data\"\n        />\n        <input\n          type=\"number\"\n          name=\"valor\"\n          data-testid=\"value-input\"\n          onChange={ this.handleForm }\n          value={ valor }\n          placeholder=\"Valor da despesa\"\n        />\n        <input\n          type=\"text\"\n          name=\"descricao\"\n          data-testid=\"description-input\"\n          onChange={ this.handleForm }\n          value={ descricao }\n          placeholder=\"Descrição da despesa\"\n        />\n        <select\n          type=\"text\"\n          name=\"metodo\"\n          data-testid=\"method-input\"\n          onChange={ this.handleForm }\n          value={ metodo }\n          placeholder=\"Método de Pagamento\"\n        >\n          <option value=\"Dinheiro\">Dinheiro</option>\n          <option value=\"Cartão de crédito\">Cartão de crédito</option>\n          <option value=\"Cartão de débito\">Cartão de débito</option>\n        </select>\n        <select\n          type=\"text\"\n          name=\"despesa\"\n          onChange={ this.handleForm }\n          value={ despesa }\n          placeholder=\"Tipo de Despesa\"\n          data-testid=\"tag-input\"\n        >\n          {\n            arrayTipos.map((tipo, index) => (\n              <option key={ index } value={ tipo }>{tipo}</option>\n            ))\n          }\n        </select>\n        <label htmlFor=\"coin-select\">\n          Moeda:\n          <select\n            id=\"coin-select\"\n            name=\"moeda\"\n            value={ moeda }\n            onChange={ this.handleForm }\n            label=\"Moeda\"\n          >\n            {\n              currencies.map((item, index) => (\n                <option key={ index } value={ item }>{item}</option>\n              ))\n            }\n          </select>\n        </label>\n        <button\n          type=\"button\"\n          onClick={ this.saveInfo }\n        >\n          Adicionar despesa\n        </button>\n      </form>\n    );\n  }\n}\n\nFormExpenses.propTypes = {\n  currencies: PropTypes.string,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  walletExpenses: (state) => dispatch(actionExpense(state)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormExpenses);\n"]},"metadata":{},"sourceType":"module"}